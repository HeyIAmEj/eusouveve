{
  "version": 3,
  "sources": ["../../codemirror/mode/xml/xml.js", "../../codemirror/mode/css/css.js", "../../codemirror/mode/htmlmixed/htmlmixed.js", "../../codemirror/mode/php/php.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\n  var inline = parserConfig.inline\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\n\n  var indentUnit = config.indentUnit,\n      tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true,\n      highlightNonStandardPropertyKeywords = config.highlightNonStandardPropertyKeywords !== false;\n\n  var type, override;\n  function ret(style, tp) { type = tp; return style; }\n\n  // Tokenizers\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return ret(\"variable-2\", \"variable-definition\");\n        return ret(\"variable-2\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n      if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) {\n        state.tokenize = tokenParenthesized;\n      }\n      return ret(\"variable callee\", \"variable\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n    if (!stream.match(/^\\s*[\\\"\\')]/, false))\n      state.tokenize = tokenString(\")\");\n    else\n      state.tokenize = null;\n    return ret(null, \"(\");\n  }\n\n  // Context management\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev)\n      state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--)\n      state.context = state.context.prev;\n    return pass(type, stream, state);\n  }\n\n  // Parser\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word))\n      override = \"atom\";\n    else if (colorKeywords.hasOwnProperty(word))\n      override = \"keyword\";\n    else\n      override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function(type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/i.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/i.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n    return state.context.type;\n  };\n\n  states.block = function(type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override += \" error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function(type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/.test(stream.current())) {\n      override += \" error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n    return \"prop\";\n  };\n\n  states.propBlock = function(type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\n    return state.context.type;\n  };\n\n  states.parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function(type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variable-3\";\n      return state.context.type;\n    }\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function(type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\n        override = \"keyword\";\n      else if (mediaTypes.hasOwnProperty(word))\n        override = \"attribute\";\n      else if (mediaFeatures.hasOwnProperty(word))\n        override = \"property\";\n      else if (mediaValueKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else if (propertyKeywords.hasOwnProperty(word))\n        override = \"property\";\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n      else if (valueKeywords.hasOwnProperty(word))\n        override = \"atom\";\n      else if (colorKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else\n        override = \"error\";\n    }\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function(type, stream, state) {\n    if (type == \"}\")\n      return popAndPass(type, stream, state);\n    if (type == \"{\")\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\")\n      override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function(type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function(type, stream, state) {\n    if (type == \"{\")\n      return pushContext(state, stream, \"restricted_atBlock\");\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function(type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n    if (type == \"word\") {\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\n        override = \"error\";\n      else\n        override = \"property\";\n      return \"maybeprop\";\n    }\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function(type, stream, state) {\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";\n    else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function(type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    startState: function(base) {\n      return {tokenize: null,\n              state: inline ? \"block\" : \"top\",\n              stateArg: null,\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\n    },\n\n    token: function(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n      override = style;\n      if (type != \"comment\")\n        state.state = states[state.state](type, stream, state);\n      return override;\n    },\n\n    indent: function(state, textAfter) {\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - indentUnit);\n        }\n      }\n      return indent;\n    },\n\n    electricChars: \"}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: lineComment,\n    fold: \"brace\"\n  };\n});\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) {\n      keys[array[i].toLowerCase()] = true;\n    }\n    return keys;\n  }\n\n  var documentTypes_ = [\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\n  ], documentTypes = keySet(documentTypes_);\n\n  var mediaTypes_ = [\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\n    \"tty\", \"tv\", \"embossed\"\n  ], mediaTypes = keySet(mediaTypes_);\n\n  var mediaFeatures_ = [\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\", \"prefers-color-scheme\",\n    \"dynamic-range\", \"video-dynamic-range\"\n  ], mediaFeatures = keySet(mediaFeatures_);\n\n  var mediaValueKeywords_ = [\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\n    \"interlace\", \"progressive\",\n    \"dark\", \"light\",\n    \"standard\", \"high\"\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\n\n  var propertyKeywords_ = [\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\n    \"alignment-baseline\", \"all\", \"anchor-point\", \"animation\", \"animation-delay\",\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backdrop-filter\",\n    \"backface-visibility\", \"background\", \"background-attachment\",\n    \"background-blend-mode\", \"background-clip\", \"background-color\",\n    \"background-image\", \"background-origin\", \"background-position\",\n    \"background-position-x\", \"background-position-y\", \"background-repeat\",\n    \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"block-size\",\n    \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\",\n    \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\",\n    \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\",\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\n    \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\",\n    \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\",\n    \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\",\n    \"border-top\", \"border-top-color\", \"border-top-left-radius\",\n    \"border-top-right-radius\", \"border-top-style\", \"border-top-width\",\n    \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\",\n    \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\",\n    \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\",\n    \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\",\n    \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"contain\",\n    \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\",\n    \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\",\n    \"drop-initial-after-adjust\", \"drop-initial-after-align\",\n    \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\",\n    \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-content\", \"fit-position\",\n    \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\",\n    \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\",\n    \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\",\n    \"font-language-override\", \"font-optical-sizing\", \"font-size\",\n    \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\",\n    \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\",\n    \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\",\n    \"font-variant-position\", \"font-variation-settings\", \"font-weight\", \"gap\",\n    \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\",\n    \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\",\n    \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\",\n    \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\",\n    \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\",\n    \"inset\", \"inset-block\", \"inset-block-end\", \"inset-block-start\", \"inset-inline\",\n    \"inset-inline-end\", \"inset-inline-start\", \"isolation\", \"justify-content\",\n    \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\", \"line-break\",\n    \"line-height\", \"line-height-step\", \"line-stacking\", \"line-stacking-ruby\",\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marks\",\n    \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\",\n    \"marquee-style\", \"mask-clip\", \"mask-composite\", \"mask-image\", \"mask-mode\",\n    \"mask-origin\", \"mask-position\", \"mask-repeat\", \"mask-size\",\"mask-type\",\n    \"max-block-size\", \"max-height\", \"max-inline-size\",\n    \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\",\n    \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\",\n    \"nav-up\", \"object-fit\", \"object-position\", \"offset\", \"offset-anchor\",\n    \"offset-distance\", \"offset-path\", \"offset-position\", \"offset-rotate\",\n    \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\",\n    \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\",\n    \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\",\n    \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\",\n    \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\",\n    \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\",\n    \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\",\n    \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\",\n    \"region-break-after\", \"region-break-before\", \"region-break-inside\",\n    \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\",\n    \"rest-before\", \"richness\", \"right\", \"rotate\", \"rotation\", \"rotation-point\",\n    \"row-gap\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\",\n    \"scale\", \"scroll-behavior\", \"scroll-margin\", \"scroll-margin-block\",\n    \"scroll-margin-block-end\", \"scroll-margin-block-start\", \"scroll-margin-bottom\",\n    \"scroll-margin-inline\", \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\", \"scroll-margin-left\", \"scroll-margin-right\",\n    \"scroll-margin-top\", \"scroll-padding\", \"scroll-padding-block\",\n    \"scroll-padding-block-end\", \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\", \"scroll-padding-inline\", \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\", \"scroll-padding-left\", \"scroll-padding-right\",\n    \"scroll-padding-top\", \"scroll-snap-align\", \"scroll-snap-type\",\n    \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\",\n    \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\",\n    \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\",\n    \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\",\n    \"text-align\", \"text-align-last\", \"text-combine-upright\", \"text-decoration\",\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\n    \"text-decoration-skip-ink\", \"text-decoration-style\", \"text-emphasis\",\n    \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\",\n    \"text-height\", \"text-indent\", \"text-justify\", \"text-orientation\",\n    \"text-outline\", \"text-overflow\", \"text-rendering\", \"text-shadow\",\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\",\n    \"text-underline-position\", \"text-wrap\", \"top\", \"touch-action\", \"transform\", \"transform-origin\",\n    \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\",\n    \"transition-property\", \"transition-timing-function\", \"translate\",\n    \"unicode-bidi\", \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\",\n    \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\",\n    \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\",\n    \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\",\n    // SVG-specific\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\n    \"color-interpolation\", \"color-interpolation-filters\",\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"paint-order\", \"shape-rendering\", \"stroke\",\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\",\n  ], propertyKeywords = keySet(propertyKeywords_);\n\n  var nonStandardPropertyKeywords_ = [\n    \"accent-color\", \"aspect-ratio\", \"border-block\", \"border-block-color\", \"border-block-end\",\n    \"border-block-end-color\", \"border-block-end-style\", \"border-block-end-width\",\n    \"border-block-start\", \"border-block-start-color\", \"border-block-start-style\",\n    \"border-block-start-width\", \"border-block-style\", \"border-block-width\",\n    \"border-inline\", \"border-inline-color\", \"border-inline-end\",\n    \"border-inline-end-color\", \"border-inline-end-style\",\n    \"border-inline-end-width\", \"border-inline-start\", \"border-inline-start-color\",\n    \"border-inline-start-style\", \"border-inline-start-width\",\n    \"border-inline-style\", \"border-inline-width\", \"content-visibility\", \"margin-block\",\n    \"margin-block-end\", \"margin-block-start\", \"margin-inline\", \"margin-inline-end\",\n    \"margin-inline-start\", \"overflow-anchor\", \"overscroll-behavior\", \"padding-block\", \"padding-block-end\",\n    \"padding-block-start\", \"padding-inline\", \"padding-inline-end\",\n    \"padding-inline-start\", \"scroll-snap-stop\", \"scrollbar-3d-light-color\",\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\n    \"scrollbar-track-color\", \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"shape-inside\", \"zoom\"\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\n\n  var fontProperties_ = [\n    \"font-display\", \"font-family\", \"src\", \"unicode-range\", \"font-variant\",\n     \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"\n  ], fontProperties = keySet(fontProperties_);\n\n  var counterDescriptors_ = [\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\n  ], counterDescriptors = keySet(counterDescriptors_);\n\n  var colorKeywords_ = [\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkgrey\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkslategrey\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dimgrey\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightgrey\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightslategrey\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n  ], colorKeywords = keySet(colorKeywords_);\n\n  var valueKeywords_ = [\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\n    \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"blur\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"brightness\", \"bullets\", \"button\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\n    \"compact\", \"condensed\", \"conic-gradient\", \"contain\", \"content\", \"contents\",\n    \"content-box\", \"context-menu\", \"continuous\", \"contrast\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\n    \"cross\", \"crosshair\", \"cubic-bezier\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\n    \"dot-dash\", \"dot-dot-dash\",\n    \"dotted\", \"double\", \"down\", \"drop-shadow\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"grayscale\", \"graytext\", \"grid\", \"groove\",\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"hue-rotate\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"manipulation\", \"match\", \"matrix\", \"matrix3d\",\n    \"media-play-button\", \"media-slider\", \"media-sliderthumb\",\n    \"media-volume-slider\", \"media-volume-sliderthumb\", \"medium\",\n    \"menu\", \"menulist\", \"menulist-button\",\n    \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"myanmar\", \"n-resize\",\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\",\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\n    \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\",\n    \"repeating-conic-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\n    \"s-resize\", \"sans-serif\", \"saturate\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"sepia\", \"serif\", \"show\", \"sidama\",\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\",\n    \"subpixel-antialiased\", \"svg_masks\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\n    \"tamil\",\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\",\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\n    \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\", \"visiblePainted\",\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\n    \"xx-large\", \"xx-small\"\n  ], valueKeywords = keySet(valueKeywords_);\n\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\n    .concat(valueKeywords_);\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return [\"comment\", \"comment\"];\n  }\n\n  CodeMirror.defineMIME(\"text/css\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-scss\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \":\": function(stream) {\n        if (stream.match(/^\\s*\\{/, false))\n          return [null, null]\n        return false;\n      },\n      \"$\": function(stream) {\n        stream.match(/^[\\w-]+/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"#\": function(stream) {\n        if (!stream.eat(\"{\")) return false;\n        return [null, \"interpolation\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"scss\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-less\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \"@\": function(stream) {\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"&\": function() {\n        return [\"atom\", \"atom\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"less\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-gss\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    supportsAtComponent: true,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\",\n    helperType: \"gss\"\n  });\n\n});\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // Helper for phpString\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n  function phpString(closing, escapes) {\n    return function(stream, state) { return phpString_(stream, state, closing, escapes); };\n  }\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    }\n\n    // Simple syntax\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([\n          [[\"[\", null]],\n          [[/\\d[\\w\\.]*/, \"number\"],\n           [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"],\n           [/[\\w\\$]+/, \"variable\"]],\n          [[\"]\", null]]\n        ], closing, escapes);\n      }\n      if (stream.match(/^->\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([\n          [[\"->\", null]],\n          [[/[\\w]+/, \"variable\"]]\n        ], closing, escapes);\n      }\n      return \"variable-2\";\n    }\n\n    var escaped = false;\n    // Normal string\n    while (!stream.eol() &&\n           (escaped || escapes === false ||\n            (!stream.match(\"{$\", false) &&\n             !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false)))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop(); state.tokStack.pop();\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" +\n    \"do else elseif enddeclare endfor endforeach endif endswitch endwhile enum extends final \" +\n    \"for foreach function global goto if implements interface instanceof namespace \" +\n    \"new or private protected public static switch throw trait try use var while xor \" +\n    \"die echo empty exit eval include include_once isset list require require_once return \" +\n    \"print unset __halt_compiler self static parent yield insteadof finally readonly match\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage memory_get_peak_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class enum function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function(stream, state) {\n        var before;\n        if (before = stream.match(/^<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n        return false;\n      },\n      \"#\": function(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n        return \"comment\";\n      },\n      \"/\": function(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n          return \"comment\";\n        }\n        return false;\n      },\n      '\"': function(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length)\n          state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 &&\n            !--state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n        return false;\n      }\n    }\n  };\n\n  CodeMirror.defineMode(\"php\", function(config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, (parserConfig && parserConfig.htmlMode) || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"))\n          state.curState = state.php;\n          return \"meta\";\n        }\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n        if (state.pending) state.pending = null;\n        var cur = stream.current(), openPHP = cur.search(/<\\?/), m;\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];\n          else state.pending = {end: stream.pos, style: style};\n          stream.backUp(cur.length - openPHP);\n        }\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function() {\n        var html = CodeMirror.startState(htmlMode)\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null\n        return {html: html,\n                php: php,\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\n                curState: parserConfig.startOpen ? php : html,\n                pending: null};\n      },\n\n      copyState: function(state) {\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php, phpNew = php && CodeMirror.copyState(phpMode, php), cur;\n        if (state.curMode == htmlMode) cur = htmlNew;\n        else cur = phpNew;\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\n                pending: state.pending};\n      },\n\n      token: dispatch,\n\n      indent: function(state, textAfter, line) {\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\n          return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\n    };\n  }, \"htmlmixed\", \"clike\");\n\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {name: \"php\", startOpen: true});\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "type", "CodeMirror", "documentTypes", "mediaTypes", "mediaFeatures", "mediaValueKeywords", "propertyKeywords", "nonStandardPropertyKeywords", "fontProperties", "counterDescriptors", "colorKeywords", "valueKeywords", "type", "CodeMirror", "stream", "state", "CodeMirror"]
}
